name: build-integration
on: push

jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.3
      - run: make test

  rubocop:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - run: bundle exec rubocop

  # build-linux:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3.1.0
  #     - uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.17.3
  #     - name: Build linux binary
  #       run: make build-production
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: "/project/*.linux_amd64"

  check-deps-tidy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.3
      - run: go mod tidy
      - run: |
          if ! git diff --exit-code -- go.mod go.sum; then
            echo "Modules not tidy; please run 'go mod tidy'";
          fi;

  check-deps-updated:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.3
      - run: go mod download
      - run: env GOPROXY=off go build -mod=readonly ./...

  integration:
    runs-on: ubuntu-latest
    # needs:
    #   - build-linux
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.3
      - name: Build linux binary
        run: make build-production
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      # - name: Build linux binary
      #   run: make build-production
      - name: Run integration tests
        run: make test-integration

  release:
    if: contains('refs/heads/master', github.ref)
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-go@v3
        with:
          go-version: 1.17.3
      - name: Release
        run: |-
          CURRENT_VERSION="v$(cat DRAUPNIR_VERSION)"
          if [[ $(git tag -l "${CURRENT_VERSION}") == "${CURRENT_VERSION}" ]]; then
            echo "Version ${CURRENT_VERSION} is already released"
            exit 0
          fi
          curl -L -o /tmp/goreleaser_Linux_x86_64.tar.gz https://github.com/goreleaser/goreleaser/releases/download/v1.10.2/goreleaser_Linux_x86_64.tar.gz
          tar zxf /tmp/goreleaser_Linux_x86_64.tar.gz -C /tmp
          git log --pretty=oneline --abbrev-commit --no-decorate --no-color "$(git describe --tags --abbrev=0)..HEAD" -- pkg cmd vendor internal > /tmp/release-notes
          git tag "${CURRENT_VERSION}"
          git push --tags
          /tmp/goreleaser --rm-dist --release-notes /tmp/release-notes
